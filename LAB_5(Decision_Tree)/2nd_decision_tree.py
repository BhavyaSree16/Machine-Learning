# -*- coding: utf-8 -*-
"""2nd_Decision_tree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i4iDoekvJAYR0qxJn8TY1QTWP_qvWoIM

importing the libraries
"""

import pandas as pd
import numpy as np

"""load the enjoysports data set"""

dataset = pd.read_csv('ENJOYSPORT.csv')
print(dataset.head())

"""b. Use Label Encoding"""

from sklearn.preprocessing import LabelEncoder
encoder = LabelEncoder()

for feature in dataset.columns:
    dataset[feature] = encoder.fit_transform(dataset[feature])

print(dataset.head())

"""c. Create a decision tree classifier"""

from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split

# Separate features and target
features = dataset.iloc[:, :-1]  # Features (all columns except the last one)
target = dataset.iloc[:, -1]     # Target (the last column)

# Split the dataset into training and testing sets
features_train, features_test, target_train, target_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Create and train the Decision Tree Classifier
classifier = DecisionTreeClassifier(criterion='entropy')  # Using 'entropy' for ID3 algorithm
classifier.fit(features_train, target_train)

# Test the classifier
accuracy_score = classifier.score(features_test, target_test)
print(f"Model Accuracy: {accuracy_score * 100:.2f}%")

"""d. Visualize the tree"""

# This code will create tree and store in new pdf formate name decision_tree


# from sklearn.tree import export_graphviz
# import graphviz

# # Export the tree to a DOT format
# dot_data = export_graphviz(classifier, out_file=None,
#                            feature_names=features.columns,
#                            class_names=encoder.classes_,
#                            filled=True, rounded=True,
#                            special_characters=True)

# # Visualize the tree
# graph = graphviz.Source(dot_data)
# graph.render("decision_tree")  # Save as a file (optional)
# graph.view()  # View in your default viewer

from sklearn import tree
import matplotlib.pyplot as plt

# Plot the decision tree
plt.figure(figsize=(12,8))
tree.plot_tree(classifier, feature_names=features.columns, class_names=encoder.classes_, filled=True, rounded=True)
plt.show()